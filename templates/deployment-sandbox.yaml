{{- $fullName := include "airlock-iam.fullname" . -}}
{{- $the_name := $fullName -}}
{{- $hasSandbox := include "airlock-iam.hasSandbox" . -}}
{{- if $hasSandbox -}}
{{-   range $app, $app_values := .Values.iam.apps -}}
{{-     if and (and $app_values.enable $app_values.sandbox.enable) (eq (int $app_values.sandbox.replicas) 1) -}}
{{-       $suffix := ternary $app_values.sandbox.suffix $app (ne $app_values.sandbox.suffix "") -}}
{{-       $the_name = print $fullName "-" $suffix -}}
{{-       $propIdx := include "airlock-iam.findProperties" $app_values.sandbox.propertiesName -}}
{{-       $instanceProp := index $.Values.iam.instanceProperties (int $propIdx) -}}
---
apiVersion: v1
kind: Deployment
metadata:
  name: {{ $the_name }}
  labels:
    app.kubernetes.io/name: {{ $the_name }}
    app.kubernetes.io/component: {{ $suffix }}
    {{- include "airlock-iam.labels" $ | nindent 4 }}
spec:
  replicas: {{ $app_values.sandbox.replicas }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ $the_name }}
      app.kubernetes.io/component: {{ $suffix }}
      {{- include "airlock-iam.selectorLabels" $ | nindent 6 }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ $the_name }}
        app.kubernetes.io/component: {{ $suffix }}
        {{- include "airlock-iam.labels" $ | nindent 8 }}
    spec:
      serviceAccountName: {{ $fullName }}
      automateServiceAccountToken: true
      dnsPolicy: clusterFirst
      enableServiceLinks: true
      {{- if $.Values.image.pullSecret }}
      imagePullSecrets:
        - name: {{ $.Values.image.pullSecret }}
      {{- end }}
      containers:
        - name: {{ $the_name }}
          image: "{{ $.Values.image.repository }}:{{ $.Values.image.tag }}"
          imagePullPolicy: {{ quote $.Values.image.pullPolicy }}
          args: ["run", "-i", {{ quote $.Values.iam.instanceName }}]
          env:
            {{- if $.Values.iam.environmentId }}
            - name: IAM_ENVIRONMENT_ID
              value: {{ $.Values.iam.environmentId }}
            {{- end }}
            - name: IAM_CONFIG_FORMAT
              value: {{ ternary "xml" "yaml" (eq (lower $.Values.iam.configFormat) "xml") }}
            {{- if $.Values.iam.apps.adminapp.path }}
            - name: IAM_ADMINAPP_URL_PATH
              value: {{ $.Values.iam.apps.adminapp.path }}
            {{- end }}
            {{- if $.Values.iam.apps.loginapp.path }}
            - name: IAM_LOGINAPP_URL_PATH
              value: {{ $.Values.iam.apps.loginapp.path }}
            {{- end }}
            {{- if $.Values.iam.apps.transactionApproval.path }}
            - name: IAM_TRANSACTION_APPROVAL_URL_PATH
              value: {{ $.Values.iam.apps.transactionApproval.path }}
            {{- end }}
            {{- if $.Values.iam.apps.serviceContainer.path }}
            - name: IAM_SERVICE_CONTAINER_URL_PATH
              value: {{ $.Values.iam.apps.serviceContainer.path }}
            {{- end }}
            {{- if $.Values.iam.apps.apiPolicyService.path }}
            - name: IAM_API_POLICY_SERVICE_URL_PATH
              value: {{ $.Values.iam.apps.apiPolicyService.path }}
            {{- end }}
            - name: IAM_MODULES
              value: {{ include "airlock-iam.mapAppName" $app }}
            - name: IAM_WEB_SERVER_HTTP_PORT
              value: "8080"
            - name: IAM_WEB_SERVER_HTTPS_PORT
              value: "8443"
            {{- if eq $instanceProp.logging.level "" }}
            - name: IAM_LOG_LEVEL
              value: INFO
            {{- else if ne $instanceProp.logging.level "" }}
            - name: IAM_LOG_LEVEL
              value: {{ $instanceProp.logging.level }}
            {{- end }}
            {{- if $instanceProp.logging.local.enable }}
            {{-   if $instanceProp.logging.local.structured }}
            - name: IAM_LOG_STRUCTURED_FILE_ENABLED
              value: "true"
            - name: IAM_LOG_MAIN_ENABLED
              value: "false"
            {{-   else }}
            - name: IAM_LOG_STRUCTURED_FILE_ENABLED
              value: "false"
            - name: IAM_LOG_MAIN_ENABLED
              value: "true"
            {{-   end }}
            {{- end }}
            {{- if $instanceProp.logging.elasticsearchUrl }}
            - name: IAM_LOG_ELASTICSEARCH_URL
              value: {{ $instanceProp.logging.elasticsearchUrl }}
            {{- end }}
            {{- if $instanceProp.logging.webserver }}
            - name: IAM_WEB_SERVER_ACCESS_LOG_FILE_ENABLED
              value: "true"
            {{- end }}
            {{- if $instanceProp.metrics }}
            - name: IAM_METRICS_PORT
              value: {{ quote $instanceProp.metrics }}
            {{- end }}
            - name: IAM_HEALTH_PORT
              value: "8081"
            {{- range $name, $value := mergeOverwrite $.Values.env $instanceProp.env $app_values.sandbox.env }}
            - name: {{ quote $name }}
              value: {{ quote $value }}
            {{- end }}
            - name: TZ
              value: {{ $.Values.global.timezone }}
          ports:
            - containerPort: 8080
              name: http
    {{- if $.Values.resourceOptions }}
          resources:
    {{ toYaml $.Values.resourceOptions | indent 8 }}
    {{- end }}
          volumeMounts:
            {{- if or $app_values.sandbox.persistence.config.enable $.Values.persistence.config.enable }}
            - mountPath: /home/airlock/instances
              name: config
            {{- end }}
            {{- if or $app_values.sandbox.persistence.logs.enable $.Values.persistence.logs.enable }}
            - mountPath: {{ print "/home/airlock/instances/" $.Values.iam.instanceName "/logs" }}
              name: logs
            {{- end }}
            - mountPath: /home/airlock/license.txt
              name: license
              subPath: license.txt
            - mountPath: /home/airlock/work
              name: work
      restartPolicy: {{ quote $.Values.restartPolicy }}
      volumes:
        {{- if $app_values.sandbox.persistence.config.enable }}
        - name: config
          {{- if eq $app_values.sandbox.persistence.config.type "request" }}
          persistentVolumeClaim:
            claimName: {{ print $fullName "-" $app "-" (ternary $app_values.sandbox.persistence.config.claim "config" (ne $app_values.sandbox.persistence.config.claim "")) }}
          {{- else if eq $app_values.sandbox.persistence.config.type "existing" }}
          persistentVolumeClaim:
            claimName: {{ $app_values.sandbox.persistence.config.claim }}
          {{- else if eq $app_values.sandbox.persistence.config.type "remote" }}
          {{ $app_values.sandbox.persistence.config.remote.type }}:
            server: {{ $app_values.sandbox.persistence.config.remote.server }}
            path: {{ $app_values.sandbox.persistence.config.remote.path }}
          {{- else if eq $app_values.sandbox.persistence.config.type "hostpath" }}
          hostPath:
            path: {{ $app_values.sandbox.persistence.config.remote.path }}
            type: Directory
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- else if $.Values.persistence.config.enable }}
        - name: config
          {{- if eq $.Values.persistence.config.type "request" }}
          persistentVolumeClaim:
            claimName: {{ print $fullName "-" (ternary $.Values.persistence.config.claim "config" (ne $.Values.persistence.config.claim "" )) }}
          {{- else if eq $.Values.persistence.config.type "existing" }}
          persistentVolumeClaim:
            claimName: {{ $.Values.persistence.config.claim }}
          {{- else if eq $.Values.persistence.config.type "remote" }}
          {{ $.Values.persistence.config.remote.type }}:
            server: {{ $.Values.persistence.config.remote.server }}
            path: {{ $.Values.persistence.config.remote.path }}
          {{- else if eq .Values.persistence.config.type "hostpath" }}
          hostPath:
            path: {{ .Values.persistence.config.hostPath.path }}
            type: Directory
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- end }}
        {{- if $app_values.sandbox.persistence.logs.enable }}
        - name: logs
          {{- if eq $app_values.sandbox.persistence.logs.type "request" }}
          persistentVolumeClaim:
            claimName: {{ print $fullName "-" $app "-" (ternary $app_values.sandbox.persistence.logs.claim "logs" (ne $app_values.sandbox.persistence.logs.claim "")) }}
          {{- else if eq $app_values.sandbox.persistence.logs.type "existing" }}
          persistentVolumeClaim:
            claimName: {{ $app_values.sandbox.persistence.logs.claim }}
          {{- else if eq $app_values.sandbox.persistence.logs.type "remote" }}
          {{ $app_values.sandbox.persistence.logs.remote.type }}:
            server: {{ $app_values.sandbox.persistence.logs.remote.server }}
            path: {{ $app_values.sandbox.persistence.logs.remote.path }}
          {{- else if eq $app_values.sandbox.persistence.logs.type "hostpath" }}
          hostPath:
            path: {{ $app_values.sandbox.persistence.logs.remote.path }}
            type: Directory
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- else if $.Values.persistence.logs.enable }}
        - name: logs
          {{- if eq $.Values.persistence.logs.type "request" }}
          persistentVolumeClaim:
            claimName: {{ print $fullName "-" (ternary $.Values.persistence.logs.claim "logs" (ne $.Values.persistence.logs.claim "")) }}
          {{- else if eq $.Values.persistence.logs.type "existing" }}
          persistentVolumeClaim:
            claimName: {{ $.Values.persistence.logs.claim }}
          {{- else if eq $.Values.persistence.logs.type "remote" }}
          {{ $.Values.persistence.logs.remote.type }}:
            server: {{ $.Values.persistence.logs.remote.server }}
            path: {{ $.Values.persistence.logs.remote.path }}
          {{- else if eq .Values.persistence.logs.type "hostpath" }}
          hostPath:
            path: {{ .Values.persistence.logs.hostPath.path }}
            type: Directory
          {{- else }}
          emptyDir: {}
          {{- end }}
        {{- end }}
        - name: license
          {{- if has (lower $.Values.iam.license.type) (list "cm" "configmap") }}
          configMap:
            name: {{ $.Values.iam.license.name }}
          {{- else }}
          secret:
            secretName: {{ $.Values.iam.license.name }}
          {{- end }}
        - name: work
          emptyDir: {}
{{-     end -}}
{{-   end -}}
{{- end -}}
